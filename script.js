function initNavigation() { let e = document.querySelector(".header"), t = document.querySelector(".nav-toggle"), s = document.querySelector(".nav-menu"), r = document.querySelectorAll(".nav-menu a"); window.addEventListener("scroll", () => { window.scrollY > 100 ? e.classList.add("scrolled") : e.classList.remove("scrolled") }), t.addEventListener("click", () => { t.classList.toggle("active"), s.classList.toggle("active"), document.body.classList.toggle("nav-open") }), r.forEach(e => { e.addEventListener("click", () => { t.classList.remove("active"), s.classList.remove("active"), document.body.classList.remove("nav-open") }) }), document.addEventListener("click", e => { !e.target.closest(".nav") && s.classList.contains("active") && (t.classList.remove("active"), s.classList.remove("active"), document.body.classList.remove("nav-open")) }) } function initScrollEffects() { let e = new IntersectionObserver(t => { t.forEach(t => { t.isIntersecting && (t.target.classList.add("animate"), e.unobserve(t.target)) }) }, { threshold: .1, rootMargin: "0px 0px -50px 0px" }), t = document.querySelectorAll(".service-card, .stat, .contact-info, .contact-form-container"); t.forEach(t => e.observe(t)) } function initSmoothScrolling() { let e = document.querySelectorAll('a[href^="#"]'); e.forEach(e => { e.addEventListener("click", t => { t.preventDefault(); let s = e.getAttribute("href"), r = document.querySelector(s); if (r) { let a = document.querySelector(".header").offsetHeight, n = r.offsetTop - a; window.scrollTo({ top: n, behavior: "smooth" }) } }) }) } function initContactForm() { let e = document.getElementById("contactForm"); e && e.addEventListener("submit", handleFormSubmit) } async function handleFormSubmit(e) { e.preventDefault(); let t = e.target, s = t.querySelector('button[type="submit"]'), r = new FormData(t); s.classList.add("loading"), s.disabled = !0, removeMessages(); try { if (!validateForm(r)) throw Error("Please fill in all required fields."); r.get("name"), r.get("email"), r.get("company"), r.get("phone"), r.get("currentSystem"), r.get("targetSystem"), r.get("message"), new Date().toISOString(), showMessage("Thank you! Your message has been sent successfully. We'll get back to you soon.", "success"), t.reset() } catch (a) { console.error("Form submission error:", a), showMessage(a.message || "An error occurred. Please try again.", "error") } finally { s.classList.remove("loading"), s.disabled = !1 } } function validateForm(e) { for (let t of ["name", "email", "message"]) { let s = e.get(t); if (!s || "" === s.trim()) return !1 } let r = e.get("email"); return !!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r) } function showMessage(e, t) { let s = document.body, r = document.createElement("div"); r.className = `message ${t}`, r.textContent = e, s.insertBefore(r, s.firstChild), setTimeout(() => { r.parentNode && r.remove() }, 5e3) } function removeMessages() { let e = document.querySelectorAll(".message"); e.forEach(e => e.remove()) } function initAnimations() { let e = document.querySelectorAll(".stat-animate"), t = new IntersectionObserver(e => { e.forEach(e => { e.isIntersecting && (animateNumber(e.target), t.unobserve(e.target)) }) }, { threshold: .5 }); e.forEach(e => t.observe(e)), window.addEventListener("scroll", () => { let e = window.pageYOffset, t = document.querySelector(".hero"); t && (t.style.transform = `translateY(${-.5 * e}px)`) }) } function animateMaskedNumber(e) { let t = e.getAttribute("data-start"), s = e.getAttribute("data-target") || e.getAttribute("data-targer"); if (!t || !s) return; let r = t.match(/(\d+|\D+)/g), a = s.match(/(\d+|\D+)/g); if (!r || !a || r.length !== a.length) { console.error("Mismatch in start and end format:", e); return } let n = [], l = r.map((e, t) => { let s = a[t]; return /^\d+$/.test(e) && /^\d+$/.test(s) ? (n.push(t), parseInt(e, 10)) : e }), o = a.map((e, t) => n.includes(t) ? parseInt(e, 10) : e), i = 0, c = setInterval(() => { i += 1; let t = l.map((e, t) => { if (n.includes(t)) { let s = e + (o[t] - e) * (i / 50); return Math.floor(s) } return e }); e.textContent = t.join(""), i >= 50 && (e.textContent = s, clearInterval(c)) }, 20) } function animateNumber(e) { animateMaskedNumber(e) } function debounce(e, t) { let s; return function r(...a) { let n = () => { clearTimeout(s), e(...a) }; clearTimeout(s), s = setTimeout(n, t) } } document.addEventListener("DOMContentLoaded", function () { initNavigation(), initScrollEffects(), initContactForm(), initAnimations(), initSmoothScrolling(), initThemeToggle() }); const optimizedScrollHandler = debounce(() => { }, 16); function trackEvent(e, t = {}) { "undefined" != typeof gtag && gtag("event", e, t), "form_submit" === e && console.log("Form submitted:", t) } function initThemeToggle() { let e = document.getElementById("themeToggle"), t = document.getElementById("themeDropdown"), s = document.querySelectorAll(".theme-option"), r = localStorage.getItem("selectedTheme") || "light"; setTheme(r), e.addEventListener("click", e => { e.stopPropagation(), t.classList.toggle("active") }), document.addEventListener("click", e => { e.target.closest(".theme-toggle") || t.classList.remove("active") }), s.forEach(e => { e.addEventListener("click", () => { let r = e.getAttribute("data-theme"); setTheme(r), t.classList.remove("active"), s.forEach(e => e.classList.remove("active")), e.classList.add("active") }) }), s.forEach(e => { e.getAttribute("data-theme") === r && e.classList.add("active") }) } function setTheme(e) { let t = document.querySelectorAll('link[rel="stylesheet"]'), s = null; for (let r of t) if (r.href.includes("style-") && !r.href.includes("base.css")) { s = r; break } let a = { light: "style-0.css", dark: "style-1.css", yellow: "style-2.css", sunset: "style-3.css", tropical: "style-4.css", business: "style-5.css", delux: "style-6.css", scorchedsand: "style-7.css", wine: "style-8.css", clear: "style-9.css", purplehaze: "style-10.css" }[e]; if (a && s && !s.href.includes(a)) { let n = document.createElement("link"); n.rel = "stylesheet", n.href = a, s.parentNode.replaceChild(n, s), localStorage.setItem("selectedTheme", e), document.body.style.transition = "all 0.3s ease", setTimeout(() => { document.body.style.transition = "" }, 300) } } window.addEventListener("scroll", optimizedScrollHandler), document.addEventListener("DOMContentLoaded", () => { let e = document.querySelectorAll("img"); e.forEach(e => { e.addEventListener("load", () => { e.classList.add("loaded") }) }) }), document.addEventListener("keydown", e => { if ("Escape" === e.key) { let t = document.querySelector(".nav-menu"), s = document.querySelector(".nav-toggle"); t.classList.contains("active") && (s.classList.remove("active"), t.classList.remove("active"), document.body.classList.remove("nav-open")) } }), document.addEventListener("DOMContentLoaded", () => { document.querySelectorAll('a[href], button, textarea, input[type="text"], input[type="email"], input[type="tel"], select'); let e = document.querySelector(".nav-menu"), t = e.querySelector("a"), s = e.querySelector("a:last-child"); t && s && (s.addEventListener("keydown", e => { "Tab" !== e.key || e.shiftKey || (e.preventDefault(), t.focus()) }), t.addEventListener("keydown", e => { "Tab" === e.key && e.shiftKey && (e.preventDefault(), s.focus()) })) }), "serviceWorker" in navigator && window.addEventListener("load", () => { navigator.serviceWorker.register("/sw.js").then(e => { console.log("SW registered: ", e) }).catch(e => { console.log("SW registration failed: ", e) }) }), window.TechBridge = { trackEvent, showMessage, validateForm, setTheme };